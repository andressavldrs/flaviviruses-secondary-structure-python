%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Sun Oct 22 21:50:00 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
ACGUAGGAAGUGAAAAAGAGGUUAACUGUCAGGCCACAUUAAGCCACAGUACGGAAGAAGCUGUGCUGCCUGUGAGCCCCGUCCAAGGACGUUAAAAGAAGAAGUCAGGCCCCAAAGCCACGGUUUGAGCAAACCGUGCUGCCUGUAGCUCCGUCGUGGGGACGUAAAACCUGGGAGGCUGCAAACUGUGGAAGCUGUACGCACGGUGUAGCAGACUAGCGGUUAGAGGAGACCCCUCCCAUGACACAACGCAGC\
AGCGGGGCCCGAGCACUGAGGGAAGCUGUACCUCCUUGCAAAGGACUAGAGGUUAGAGGAGACCCCCCGCAAAUAAAAACAGCAUAUUGACGCUGGGAGAGACCAGAGAUCCUGCUGUCUCCUCAGCAUCAUUCCAGGCACAGAACGCCAGAAAAUGGA_AUG\
) def
/coor [
[-44.59031296 462.21136475]
[-59.54663467 463.61257935]
[-74.55789948 463.04956055]
[-89.36724091 460.53192139]
[-103.72125244 456.10275269]
[-117.37431335 449.83786011]
[-130.09280396 441.84445190]
[-141.65910339 432.25927734]
[-151.87528992 421.24633789]
[-160.56655884 408.99411011]
[-167.58416748 395.71224976]
[-172.80805969 381.62799072]
[-176.14884949 366.98239136]
[-177.54934692 352.02600098]
[-176.98561096 337.01473999]
[-174.46728516 322.20553589]
[-170.03744507 307.85174561]
[-163.77189636 294.19897461]
[-155.77787781 281.48083496]
[-146.19213867 269.91500854]
[-135.17872620 259.69934082]
[-122.92608643 251.00866699]
[-109.64388275 243.99168396]
[-95.55938721 238.76846313]
[-80.91360474 235.42837524]
[-65.95715332 234.02857971]
[-65.39494324 219.03912354]
[-64.83274078 204.04966736]
[-64.27053070 189.06019592]
[-67.68505859 187.92178345]
[-70.95501709 186.41764832]
[-74.04136658 184.56578064]
[-85.05715942 194.74674988]
[-96.07295227 204.92773438]
[-107.05049896 215.14993286]
[-117.98964691 225.41322327]
[-128.92880249 235.67651367]
[-124.43897247 250.22308350]
[-126.70098877 265.21542358]
[-135.21321106 277.68789673]
[-148.24307251 285.19680786]
[-163.17939758 286.29925537]
[-177.05572510 280.82998657]
[-187.99487305 291.09326172]
[-192.06735229 299.17733765]
[-199.05473328 301.39212036]
[-210.07052612 311.57308960]
[-221.08631897 321.75408936]
[-232.10211182 331.93505859]
[-243.11790466 342.11602783]
[-240.33316040 357.28997803]
[-246.21528625 371.55197144]
[-258.88729858 380.35104370]
[-274.30560303 380.87945557]
[-287.55029297 372.96856689]
[-294.39501953 359.14276123]
[-292.65567017 343.81375122]
[-282.88723755 331.87301636]
[-268.20681763 327.13076782]
[-253.29887390 331.10025024]
[-242.28308105 320.91925049]
[-231.26728821 310.73828125]
[-220.25149536 300.55731201]
[-209.23570251 290.37631226]
[-198.25816345 280.15411377]
[-187.31901550 269.89083862]
[-191.89341736 255.69435120]
[-189.84193420 240.85855103]
[-181.51840210 228.33338928]
[-168.52914429 220.63278198]
[-153.42317200 219.33020020]
[-139.19207764 224.73736572]
[-128.25292969 214.47407532]
[-117.31378937 204.21078491]
[-114.60733032 197.39874268]
[-106.25392914 193.91194153]
[-95.23813629 183.73095703]
[-84.22235107 173.54998779]
[-87.54429626 165.23341370]
[-88.50371552 156.32948303]
[-103.00466156 152.49247742]
[-117.50560760 148.65547180]
[-132.00654602 144.81846619]
[-146.50749207 140.98146057]
[-164.20796204 146.19132996]
[-176.11949158 133.25758362]
[-191.40968323 137.32214355]
[-201.81451416 126.66433716]
[-216.34382629 122.93616486]
[-230.87312317 119.20799255]
[-245.40243530 115.47982788]
[-235.75595093 126.96657562]
[-233.79756165 141.83818054]
[-240.14143372 155.43064880]
[-252.79801941 163.48115540]
[-267.79800415 163.46492004]
[-280.43716431 155.38702393]
[-286.75158691 141.78085327]
[-284.76098633 126.91352081]
[-275.08966064 115.44768524]
[-260.76892090 110.97919464]
[-275.01376343 106.27980804]
[-288.99960327 113.13796997]
[-303.37896729 108.16920471]
[-309.83096313 94.79358673]
[-324.09335327 90.14763641]
[-338.37304688 85.55519104]
[-352.65270996 80.96273804]
[-366.93240356 76.37029266]
[-381.21209717 71.77783966]
[-376.34555054 85.96646118]
[-384.33935547 98.65893555]
[-399.23806763 100.39926910]
[-409.94198608 89.89089203]
[-408.47662354 74.96263885]
[-395.93518066 66.73638916]
[-410.03268433 61.61195755]
[-424.13021851 56.48752975]
[-433.18209839 56.50526428]
[-438.31399536 51.27146530]
[-452.37268066 46.04148102]
[-466.43139648 40.81149292]
[-480.49011230 35.58150864]
[-494.54882812 30.35152054]
[-508.60751343 25.12153435]
[-522.66625977 19.89154816]
[-538.73699951 23.15682602]
[-549.39605713 10.69419384]
[-543.67822266 -4.67586040]
[-527.46557617 -7.14194250]
[-517.43621826 5.83284092]
[-503.37753296 11.06282711]
[-489.31881714 16.29281425]
[-475.26013184 21.52280045]
[-461.20141602 26.75278664]
[-447.14270020 31.98277283]
[-433.08401489 37.21275711]
[-419.00579834 42.39000320]
[-404.90826416 47.51443481]
[-390.81072998 52.63886261]
[-376.61962891 57.49815750]
[-362.33996582 62.09060669]
[-348.06027222 66.68305206]
[-333.78057861 71.27550507]
[-319.50088501 75.86795044]
[-312.23080444 74.93283081]
[-305.13159180 80.54873657]
[-291.98709106 73.63802338]
[-277.47384644 78.20095062]
[-270.31439209 92.03495789]
[-256.06954956 96.73434448]
[-241.67427063 100.95051575]
[-227.14495850 104.67868805]
[-212.61564636 108.40686035]
[-198.08634949 112.13502502]
[-183.83538818 107.80381775]
[-172.39131165 118.72827911]
[-161.87521362 112.85335541]
[-149.77896118 115.78137970]
[-142.67048645 126.48052216]
[-128.16955566 130.31752014]
[-113.66860199 134.15452576]
[-99.16765594 137.99153137]
[-84.66670990 141.82853699]
[-78.35175323 133.29025269]
[-69.61555481 127.17293549]
[-59.34576797 124.13318634]
[-48.59709167 124.51309967]
[-38.48291779 128.30201721]
[-30.06002998 135.13468933]
[-16.83286858 128.06063843]
[-3.60570693 120.98658752]
[9.62145519 113.91254425]
[22.84861755 106.83849335]
[36.07577896 99.76444244]
[49.30294037 92.69039154]
[55.77498245 79.15847778]
[52.97973251 64.42122650]
[50.12925339 49.69455719]
[47.22358322 34.97867966]
[44.31791306 20.26280022]
[41.41224289 5.54692173]
[26.68482780 -3.96453595]
[23.49598312 -20.85913467]
[33.34716034 -34.53436661]
[30.33123589 -49.22804260]
[27.31531143 -63.92172241]
[24.29938698 -78.61540222]
[21.28346252 -93.30908203]
[18.26753998 -108.00276184]
[3.54427409 -112.18415070]
[-7.54134655 -122.73723602]
[-12.44192791 -137.23699951]
[-10.03135300 -152.35148621]
[-0.86355370 -164.60749817]
[12.95477676 -171.18870544]
[28.24828720 -170.58279419]
[41.50263977 -162.92900085]
[49.67208481 -149.98608398]
[50.87933731 -134.72827148]
[44.84698486 -120.66166687]
[32.96121979 -111.01868439]
[35.97714233 -96.32500458]
[38.99306488 -81.63132477]
[42.00899124 -66.93764496]
[45.02491379 -52.24396896]
[48.04083633 -37.55028915]
[59.64687729 -32.06196976]
[66.09074402 -20.73413277]
[64.84058380 -7.56685305]
[56.12812042 2.64125228]
[59.03379059 17.35713005]
[61.93946075 32.07300949]
[64.84513092 46.78888702]
[69.18737793 52.69428635]
[67.71697998 61.62597275]
[70.51223755 76.36322784]
[77.97384644 77.12108612]
[100.35868073 79.39466858]
[106.05994415 65.52038574]
[111.76120758 51.64611053]
[117.25378418 37.68790054]
[122.53643799 23.64889908]
[127.81909180 9.60989761]
[133.10174561 -4.42910385]
[126.82600403 -18.68577766]
[132.38336182 -32.84806824]
[146.01359558 -38.74317551]
[151.29624939 -52.78217697]
[156.57890320 -66.82117462]
[161.86155701 -80.86017609]
[158.65653992 -96.94309235]
[171.15905762 -107.55532074]
[186.50756836 -101.77991486]
[188.91284180 -85.55812073]
[175.90055847 -75.57752228]
[170.61790466 -61.53852463]
[165.33525085 -47.49952316]
[160.05259705 -33.46052170]
[166.41552734 -20.04230118]
[161.25816345 -5.72950315]
[147.14074707 0.85355031]
[141.85809326 14.89255142]
[136.57543945 28.93155289]
[131.29278564 42.97055435]
[132.25755310 45.52136612]
[132.31101990 48.59312057]
[131.25537109 51.85490799]
[129.01113892 54.91206741]
[125.63549042 57.34737396]
[119.93422699 71.22164917]
[114.23295593 85.09593201]
[119.42578888 90.50744629]
[130.24897766 80.12194824]
[140.63430786 90.94529724]
[129.81146240 101.33047485]
[135.00428772 106.74198914]
[149.10180664 101.61756134]
[163.19934082 96.49312592]
[177.29685974 91.36869812]
[191.39439392 86.24427032]
[205.49191284 81.11983490]
[197.10162354 61.23979187]
[210.21194458 35.19822311]
[223.43911743 28.12417221]
[228.23822021 11.26198959]
[243.46659851 3.28122473]
[259.42153931 8.71234226]
[272.59530640 1.53931618]
[285.76904297 -5.63370943]
[290.33691406 -20.52573013]
[303.79916382 -27.61253357]
[317.96829224 -23.16599083]
[331.14202881 -30.33901596]
[344.31579590 -37.51204300]
[357.48953247 -44.68506622]
[358.50588989 -60.07891464]
[367.70178223 -72.46595764]
[382.14288330 -77.89353943]
[397.22103882 -74.62973022]
[408.12490845 -63.71600342]
[411.37506104 -48.63489151]
[405.93441772 -34.19871902]
[393.53906250 -25.01402092]
[378.14431763 -24.01159668]
[364.66256714 -31.51131630]
[351.48880005 -24.33829117]
[338.31506348 -17.16526604]
[325.14129639 -9.99223995]
[321.18740845 4.32216978]
[307.92953491 11.78430271]
[292.94207764 7.54004097]
[279.76834106 14.71306705]
[266.59457397 21.88609314]
[264.73248291 34.58862686]
[255.77848816 44.05802155]
[242.81959534 46.70520782]
[230.51316833 41.35133362]
[217.28599548 48.42538452]
[219.20449829 55.67585754]
[233.70544434 51.83885574]
[248.20645142 48.00207901]
[252.04299927 62.50313950]
[237.54244995 66.33979797]
[223.04150391 70.17680359]
[224.96000671 77.42727661]
[239.95483398 77.03368378]
[254.94967651 76.64009094]
[269.94451904 76.24650574]
[280.63955688 64.61072540]
[296.43313599 64.02901459]
[307.95520020 74.84649658]
[308.36990356 90.64534760]
[297.43121338 102.05238342]
[281.62884521 102.30001831]
[270.33810425 91.24134064]
[255.34326172 91.63492584]
[240.34843445 92.02851868]
[225.35359192 92.42211151]
[210.61634827 95.21736145]
[196.51881409 100.34178925]
[182.42129517 105.46622467]
[168.32377625 110.59065247]
[154.22624207 115.71508026]
[140.12872314 120.83951569]
[138.62075806 128.18635559]
[153.44927979 130.44795227]
[168.27780151 132.70956421]
[183.10633850 134.97116089]
[197.93486023 137.23275757]
[212.76338196 139.49436951]
[227.09513855 135.06710815]
[240.04081726 142.64401245]
[243.19888306 157.30780029]
[234.51979065 169.54190063]
[219.63615417 171.40660095]
[208.20726013 161.69190979]
[193.68678284 157.92953491]
[179.16629028 154.16716003]
[164.64581299 150.40478516]
[150.12532043 146.64241028]
[135.60482788 142.88003540]
[134.09687805 150.22686768]
[145.03602600 160.49015808]
[155.97517395 170.75344849]
[171.33331299 174.55316162]
[175.32101440 188.90402222]
[186.26016235 199.16731262]
[197.19931030 209.43060303]
[208.13845825 219.69389343]
[219.07760620 229.95716858]
[230.01675415 240.22045898]
[238.34376526 243.76980591]
[240.99906921 250.60194397]
[251.86096191 260.94696045]
[262.72283936 271.29199219]
[273.58474731 281.63699341]
[284.44662476 291.98202515]
[295.38577271 302.24530029]
[306.40158081 312.42626953]
[317.41735840 322.60726929]
[333.44006348 323.41519165]
[342.68093872 336.52951050]
[338.05120850 351.89004517]
[323.10241699 357.71347046]
[309.30194092 349.53256226]
[307.23638916 333.62304688]
[296.22058105 323.44207764]
[285.20480347 313.26107788]
[280.55715942 312.54193115]
[276.28762817 308.94601440]
[274.10162354 302.84390259]
[263.23971558 292.49887085]
[252.37783813 282.15386963]
[241.51594543 271.80883789]
[230.65405273 261.46383667]
[219.75346375 251.15960693]
[208.81431580 240.89631653]
[197.87516785 230.63304138]
[186.93601990 220.36975098]
[175.99687195 210.10646057]
[165.05772400 199.84317017]
[150.48200989 196.77757263]
[145.71188354 181.69259644]
[134.77273560 171.42930603]
[123.83358765 161.16601562]
[56.37699127 105.91754913]
[43.14982986 112.99160004]
[29.92266655 120.06565094]
[16.69550514 127.13970184]
[3.46834373 134.21376038]
[-9.75881863 141.28779602]
[-22.98597908 148.36184692]
[-27.22791672 174.88569641]
[-49.28107452 189.62240601]
[-49.84327698 204.61186218]
[-50.40548325 219.60133362]
[-50.96768951 234.59078979]
[-36.15811157 237.10700989]
[-21.80367851 241.53479004]
[-8.15001774 247.79838562]
[4.56923962 255.79060364]
[16.13645172 265.37469482]
[26.35368538 276.38662720]
[35.04611206 288.63803101]
[42.06499481 301.91925049]
[47.29022980 316.00299072]
[50.63240433 330.64828491]
[52.03433228 345.60455322]
[51.47202301 360.61584473]
[48.95509720 375.42529297]
[44.52662659 389.77951050]
[38.26238632 403.43289185]
[30.26956558 416.15176392]
[20.68493271 427.71850586]
[9.67249203 437.93521118]
[-2.57931828 446.62707520]
[-15.86085415 453.64532471]
] def
/pairs [
[26 398]
[27 397]
[28 396]
[29 395]
[32 78]
[33 77]
[34 76]
[35 74]
[36 73]
[37 72]
[43 66]
[44 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[80 164]
[81 163]
[82 162]
[83 161]
[84 160]
[86 157]
[88 155]
[89 154]
[90 153]
[91 152]
[101 151]
[102 150]
[105 147]
[106 145]
[107 144]
[108 143]
[109 142]
[110 141]
[116 140]
[117 139]
[118 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
[126 131]
[170 393]
[171 392]
[172 391]
[173 390]
[174 389]
[175 388]
[176 387]
[177 217]
[178 216]
[179 214]
[180 213]
[181 212]
[182 211]
[185 207]
[186 206]
[187 205]
[188 204]
[189 203]
[190 202]
[219 252]
[220 251]
[221 250]
[222 245]
[223 244]
[224 243]
[225 242]
[228 239]
[229 238]
[230 237]
[231 236]
[257 325]
[258 324]
[259 323]
[260 322]
[261 321]
[262 320]
[264 299]
[265 298]
[268 294]
[269 293]
[270 292]
[273 289]
[274 288]
[275 287]
[276 286]
[306 319]
[307 318]
[308 317]
[309 316]
[343 386]
[344 385]
[345 384]
[347 382]
[348 381]
[349 380]
[350 379]
[351 378]
[352 377]
[354 376]
[355 375]
[356 374]
[357 373]
[358 372]
[359 369]
[360 368]
[361 367]
] def

init

% switch off outline pairs or bases by removing these lines
/range 0.8 def
/drawreliability {
  /Smax 3.1 def
  0
  coor {
    aload pop
    S 3 index get
    Smax div range mul
    invert {range exch sub} if
    dup 0 ge
    {1 1 sethsbcolor} {pop 1 1 1 setrgbcolor} ifelse
    newpath
    fsize 2 div 0 360 arc
    fill
    1 add
  } forall
} bind def
/colorbar { % xloc yloc colorbar -> []
  /STR 8 string def
  gsave
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    /tics 64 def
    gsave
      10 tics div 1 scale
      0 1 tics
      {
          dup 0 moveto 0.5 add
          tics div range mul
          invert {range exch sub} if
          1 1 sethsbcolor
          1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
      } for
    grestore
    0 setgray
    -0.1 1.01 moveto (0) gsave 0.1 dup scale show grestore
    10 1.01 moveto Smax STR cvs
    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def
/S [
  0.36464
  0.82926
  0.17094
  -0.00000
  0.18824
  1.29366
  1.31355
  0.58585
  0.71687
  1.57812
  1.56030
  0.15257
  0.08862
  0.07315
  0.02446
  0.05572
  0.99284
  0.68066
  1.52816
  2.04791
  1.84902
  1.55408
  -0.00000
  0.01721
  1.15668
  2.97250
  3.12241
  2.43951
  3.04695
  2.38884
  1.28302
  2.34414
  2.34165
  2.34038
  1.36730
  1.06830
  1.02949
  -0.00000
  0.02880
  0.06367
  0.12600
  0.14778
  2.26502
  2.19571
  2.00401
  1.94185
  2.00593
  1.94405
  1.86011
  1.66796
  1.03005
  1.11696
  1.13130
  1.08823
  0.07428
  0.06987
  0.00016
  0.03502
  0.03802
  1.43078
  1.54972
  1.52466
  1.50412
  1.59897
  2.18116
  1.95655
  -0.00000
  2.41482
  2.24232
  2.18742
  2.86593
  2.65660
  2.77531
  2.27382
  0.39707
  2.44392
  2.42532
  1.69694
  0.92299
  1.78289
  1.45052
  1.55665
  1.55511
  1.39103
  0.09136
  0.90820
  0.80051
  1.47157
  1.38500
  1.44792
  1.59498
  0.61123
  0.59941
  0.04204
  0.01424
  0.01888
  0.12261
  1.37013
  0.87600
  0.89585
  1.77523
  0.82206
  0.29339
  1.14058
  0.94244
  0.80681
  0.67937
  0.77461
  0.77190
  0.79982
  0.21569
  0.02515
  -0.00000
  0.01326
  0.04140
  0.40234
  0.38686
  1.22467
  1.20707
  0.12381
  0.01757
  0.00780
  0.00760
  0.05099
  0.30665
  0.85678
  0.00418
  0.00449
  0.00395
  0.00429
  0.82561
  0.30857
  0.05161
  0.00711
  0.00729
  0.01868
  0.14662
  1.29791
  0.41766
  0.54876
  0.81835
  0.77824
  0.76325
  0.80937
  0.78270
  1.35850
  0.88754
  0.21877
  1.51323
  2.69051
  2.20791
  1.97545
  1.85481
  2.00082
  1.84200
  0.45929
  2.33612
  1.07641
  1.18865
  1.98781
  2.25458
  1.50306
  1.92788
  1.96945
  0.93552
  0.06663
  0.04489
  0.16482
  0.23081
  1.40591
  1.49741
  1.48017
  1.45789
  1.51507
  1.41960
  1.79710
  1.74643
  2.32950
  1.95337
  1.89797
  1.84537
  1.91266
  0.89839
  0.81208
  1.43886
  0.90708
  0.86532
  0.87231
  1.00155
  0.99241
  1.03937
  0.13951
  0.59843
  0.76900
  0.96884
  0.90446
  0.88956
  1.35799
  0.88359
  1.67509
  0.81024
  0.99900
  0.78555
  0.77639
  0.78039
  0.95976
  1.76960
  1.69500
  1.94584
  1.55568
  2.06589
  1.91204
  1.49342
  1.87620
  0.03212
  2.55886
  2.52991
  0.69117
  1.86147
  1.68935
  2.02569
  1.35329
  1.36009
  1.41161
  0.93227
  0.92874
  0.37352
  1.11381
  1.00397
  0.84710
  1.02427
  0.34627
  0.42955
  0.50058
  0.90296
  1.11255
  1.08465
  1.02691
  1.03415
  1.22695
  0.68777
  1.29930
  1.47858
  1.23801
  1.41741
  0.56064
  0.76743
  0.41063
  0.09711
  1.45198
  2.11387
  2.11596
  1.97756
  2.38873
  2.15932
  0.24167
  0.26326
  0.23894
  0.21799
  0.21146
  0.22711
  0.43525
  1.26641
  1.42689
  1.24800
  0.05671
  0.02246
  0.49255
  0.45822
  0.49540
  0.03205
  0.09379
  0.47501
  0.42589
  0.52369
  0.54319
  0.52582
  0.11961
  0.12829
  0.10364
  0.52739
  0.54915
  0.31411
  0.53437
  0.39928
  0.52270
  0.51011
  0.51122
  0.51521
  0.35492
  0.31869
  0.62375
  0.44032
  0.48537
  0.00538
  0.00095
  0.32684
  1.43216
  1.50886
  0.13402
  0.21145
  0.12985
  0.07086
  0.53328
  0.38778
  0.54213
  0.50955
  0.56550
  0.81541
  0.37197
  0.26670
  0.19808
  0.49241
  0.28872
  0.03495
  0.64216
  0.43235
  0.54840
  0.57996
  0.45503
  0.25721
  0.24073
  0.23894
  0.24611
  0.26577
  0.06216
  0.01365
  0.01504
  0.03329
  0.01621
  0.03485
  0.04146
  0.06601
  0.56647
  0.82216
  0.79226
  1.02424
  0.87474
  0.10322
  0.25642
  0.17673
  0.47937
  1.67213
  1.19837
  1.14529
  0.74419
  0.09860
  0.08043
  0.08765
  0.15067
  0.96755
  0.96268
  0.91299
  0.96059
  0.96750
  0.91677
  1.11766
  1.04317
  1.16005
  0.98219
  1.01333
  0.45691
  0.54429
  0.01289
  0.03475
  0.05262
  1.08808
  1.16934
  0.89937
  0.88293
  1.59713
  1.42214
  0.98384
  0.96343
  0.97012
  0.99026
  0.99146
  1.01551
  0.15029
  0.08450
  0.08856
  0.10115
  0.01055
  0.85990
  1.05996
  1.39798
  1.58848
  1.34344
  1.03233
  1.01377
  0.99383
  1.02043
  1.00519
  0.00141
  0.71613
  1.16902
  0.79937
  1.29350
  0.34645
  0.93953
  1.68441
  1.80221
  2.34969
  2.85575
  0.93943
  1.08374
  0.71242
  0.04000
  0.03548
  0.89926
  2.12736
  2.25090
  1.93158
  1.44799
  -0.00000
  0.81635
  1.07303
  0.91634
] def

/invert false def
drawreliability
0.1 0.1 colorbar
drawoutline
drawpairs
drawbases
% Start Annotations
26 cmark
27 397 1 gmark
37 cmark
46 64 1 gmark
84 cmark
86 157 2 gmark
147 cmark
121 cmark
124 133 1 gmark
133 cmark
126 131 1 gmark
172 391 1 gmark
178 216 1 gmark
213 cmark
181 212 1 gmark
182 cmark
185 207 1 gmark
185 cmark
187 cmark
205 cmark
189 203 1 gmark
220 cmark
245 cmark
225 242 1 gmark
258 cmark
268 294 1 gmark
294 cmark
270 cmark
308 317 1 gmark
378 cmark

% End Annotations
% show it
showpage
end
%%EOF
